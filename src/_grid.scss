/**
 * Responsive Grid System
 *
 * My grid system uses rows and columns. Itâ€™s built with floats and clearfixes.
 * You are not forced into having a fixed number of columns across a whole page. You can have whatever you want and wherever you need it.
 *
 * Div with '.row' class is horizontaly centered container with width defined in '$grid-width' variable.
 * Inside '.row' div You can place previously defined columns in '$list-of-columns' map (remember that every map key has to be unique).
 * For example:
 * - '(1,3)' will create '.col-1-of-3' class which take one third of '.row' width.
 * - '(7,12)' will create '.col-7-of-12' class which take seven twelfths of '.row' width.
 *
 * If there is more that one column each of them (expect last one) will have right margin defined in '$grid-gutter-horizontal' variable.
 */

$list-of-columns: (
  1: (1, 2),
  2: (1, 3),
  3: (2, 3),
  4: (1, 4),
  5: (2, 4),
  6: (3, 4),
);

@each $foo, $column in $list-of-columns {
  $columns: nth($column, 1);
  $of-columns: nth($column, 2);
   
  .col-#{$columns}-of-#{$of-columns} {
    width: column-width(#{$columns}, #{$of-columns}, #{$grid-gutter-horizontal});
  }   
}

.row {
  @include clearfix;
  
  margin: 0 auto;
  max-width: $grid-width;

  &--narrow {
    @include respond('medium') {
      padding: 0 2rem;
      max-width: 60rem;
    }
  }

  &:not(:last-child) {
    margin-bottom: $grid-gutter-vertical;

    @include respond('medium') {
      margin-bottom: $grid-gutter-vertical-small;
    }
  }

  @include respond(large) {
    padding: 0 3rem; 
  }
}

[class^="col-"] {
  float: left;

  &:not(:last-child) {
    margin-right: $grid-gutter-horizontal;

    @include respond('medium') {
      margin-right: 0;
      margin-bottom: $grid-gutter-vertical-small;
    }
  }

  @include respond('medium') {
    width: 100% !important;
  }
}
